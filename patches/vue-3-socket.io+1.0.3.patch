diff --git a/node_modules/vue-3-socket.io/index.d.ts b/node_modules/vue-3-socket.io/index.d.ts
index dea7b6b..8ad0be2 100644
--- a/node_modules/vue-3-socket.io/index.d.ts
+++ b/node_modules/vue-3-socket.io/index.d.ts
@@ -1,63 +1,43 @@
-import SocketIOClient from "socket.io-client";
-import {
-    DefaultComputed,
-    DefaultData,
-    DefaultMethods,
-    DefaultProps,
-    PropsDefinition,
-} from "vue/types/options";
-import { Vue } from "vue/types/vue";
-import { PluginFunction, PluginObject } from "vue";
+import { Socket } from "socket.io-client";
+import { App, Plugin } from "vue";
 import { Store } from "vuex";
 
 interface socketHandler<T> {
-    (this: T, ...args: any[]): void
+	(this: T, ...args: any[]): void
 }
 
 interface Sockets<V> {
-    [key: string]: socketHandler<V>
+	[key: string]: socketHandler<V>
 }
 
-declare module 'vue/types/vue' {
-    interface Vue {
-        $socket: SocketIOClient.Socket,
-        sockets: {
-            subscribe(eventName: string, handler: socketHandler<Vue>): void,
-            unsubscribe(eventName: string): void,
-        }
-    }
-}
-
-declare module 'vue/types/options' {
-    interface ComponentOptions<
-        V extends Vue,
-        Data=DefaultData<V>,
-        Methods=DefaultMethods<V>,
-        Computed=DefaultComputed,
-        PropsDef=PropsDefinition<DefaultProps>,
-        Props=DefaultProps> {
-        sockets?: Sockets<V>
-    }
+declare module "@vue/runtime-core" {
+	export interface ComponentCustomProperties {
+		$socket: Socket,
+		sockets: {
+			subscribe(eventName: string, handler: socketHandler<App>): void,
+			unsubscribe(eventName: string): void,
+		}
+	}
 }
 
 export interface VueSocketOptions {
-    debug?: boolean;
-    connection: string | SocketIOClient.Socket,
-    vuex?: {
-        store?: Store<any>,
-        actionPrefix?: string,
-        mutationPrefix?: string,
-        options?: {
-            useConnectionNamespace?: boolean
-        }
-    },
-        // type declarations for optional options
-    options?:{
-        path?: string;
-    }
+	debug?: boolean;
+	connection: string | Socket,
+	vuex?: {
+		store?: Store<any>,
+		actionPrefix?: string,
+		mutationPrefix?: string,
+		options?: {
+			useConnectionNamespace?: boolean
+		}
+	},
+	// type declarations for optional options
+	options?: {
+		path?: string;
+	}
 }
 
-export default class VueSocketIO<T> implements PluginObject<T> {
-    constructor (options: VueSocketOptions);
-    install: PluginFunction<T>
+export default class VueSocketIO extends Plugin {
+	constructor(options: VueSocketOptions);
+	install: (app: App) => void;
 }
\ No newline at end of file
